{
  "uid" : "65a78932d223ab2c",
  "name" : "test_group_add[Group(None:name@<;header-\\`[tD4o6 J~;footerR-J$ h]@xu#gxTAiQ)]",
  "fullName" : "test.test_group_add.test_group_add[Group(None:name@<;header-\\`[tD4o6 J~;footerR-J$ h]@xu#gxTAiQ)]",
  "historyId" : "a8e6515a8c59cf568963cbaa1938e5c6",
  "time" : {
    "start" : 1609286244365,
    "stop" : 1609286255977,
    "duration" : 11612
  },
  "description" : "",
  "descriptionHtml" : "",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert [Group(294:От...ooter 3), ...] == [Group(294:Отр...ooter 3), ...]\n  At index 51 diff: Group(None:name@<;header-\\`[tD4o6 J~;footerR-J$ h]@xu#gxTAiQ) != Group(347:name@;header-`[tD4o6 J~;footerR-J$ h]@xu#gxTAiQ)\n  Use -v to get the full diff",
  "statusTrace" : "app = <fixture.application.Application object at 0x0000021CF7658E88>, db = <fixture.orm.ORMFixture object at 0x0000021CF7615588>, json_groups = Group(None:name@<;header-\\`[tD4o6 J~;footerR-J$ h]@xu#gxTAiQ), x = 0, check_ui = False\n\n    def test_group_add(app, db, json_groups, x, check_ui):\n        group = json_groups\n        with pytest.allure.step(\"Given a group list\"):\n            old_groups = db.get_group_list()\n        with pytest.allure.step(f\"When I add the group {group} to the list\"):\n            app.group.add(group)\n        with pytest.allure.step(\"Then the new group list is equal to the old list with the added group\"):\n            new_groups = db.get_group_list()\n            old_groups.append(group)\n>           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE           assert [Group(294:От...ooter 3), ...] == [Group(294:Отр...ooter 3), ...]\nE             At index 51 diff: Group(None:name@<;header-\\`[tD4o6 J~;footerR-J$ h]@xu#gxTAiQ) != Group(347:name@;header-`[tD4o6 J~;footerR-J$ h]@xu#gxTAiQ)\nE             Use -v to get the full diff\n\ntest\\test_group_add.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert [Group(294:От...ooter 3), ...] == [Group(294:Отр...ooter 3), ...]\n  At index 51 diff: Group(None:name@<;header-\\`[tD4o6 J~;footerR-J$ h]@xu#gxTAiQ) != Group(347:name@;header-`[tD4o6 J~;footerR-J$ h]@xu#gxTAiQ)\n  Use -v to get the full diff",
    "statusTrace" : "app = <fixture.application.Application object at 0x0000021CF7658E88>, db = <fixture.orm.ORMFixture object at 0x0000021CF7615588>, json_groups = Group(None:name@<;header-\\`[tD4o6 J~;footerR-J$ h]@xu#gxTAiQ), x = 0, check_ui = False\n\n    def test_group_add(app, db, json_groups, x, check_ui):\n        group = json_groups\n        with pytest.allure.step(\"Given a group list\"):\n            old_groups = db.get_group_list()\n        with pytest.allure.step(f\"When I add the group {group} to the list\"):\n            app.group.add(group)\n        with pytest.allure.step(\"Then the new group list is equal to the old list with the added group\"):\n            new_groups = db.get_group_list()\n            old_groups.append(group)\n>           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE           assert [Group(294:От...ooter 3), ...] == [Group(294:Отр...ooter 3), ...]\nE             At index 51 diff: Group(None:name@<;header-\\`[tD4o6 J~;footerR-J$ h]@xu#gxTAiQ) != Group(347:name@;header-`[tD4o6 J~;footerR-J$ h]@xu#gxTAiQ)\nE             Use -v to get the full diff\n\ntest\\test_group_add.py:16: AssertionError",
    "steps" : [ {
      "name" : "Given a group list",
      "time" : {
        "start" : 1609286244402,
        "stop" : 1609286244406,
        "duration" : 4
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "When I add the group Group(None:name@<;header-\\`[tD4o6 J~;footerR-J$ h]@xu#gxTAiQ) to the list",
      "time" : {
        "start" : 1609286244406,
        "stop" : 1609286255959,
        "duration" : 11553
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Then the new group list is equal to the old list with the added group",
      "time" : {
        "start" : 1609286255959,
        "stop" : 1609286255966,
        "duration" : 7
      },
      "status" : "failed",
      "statusMessage" : "app = <fixture.application.Application object at 0x0000021CF7658E88>, db = <fixture.orm.ORMFixture object at 0x0000021CF7615588>, json_groups = Group(None:name@<;header-\\`[tD4o6 J~;footerR-J$ h]@xu#gxTAiQ), x = 0, check_ui = False\n\n    def test_group_add(app, db, json_groups, x, check_ui):\n        group = json_groups\n        with pytest.allure.step(\"Given a group list\"):\n            old_groups = db.get_group_list()\n        with pytest.allure.step(f\"When I add the group {group} to the list\"):\n            app.group.add(group)\n        with pytest.allure.step(\"Then the new group list is equal to the old list with the added group\"):\n            new_groups = db.get_group_list()\n            old_groups.append(group)\n>           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE           assert [Group(294:От...ooter 3), ...] == [Group(294:Отр...ooter 3), ...]\nE             At index 51 diff: Group(None:name@<;header-\\`[tD4o6 J~;footerR-J$ h]@xu#gxTAiQ) != Group(347:name@;header-`[tD4o6 J~;footerR-J$ h]@xu#gxTAiQ)\nE             Use -v to get the full diff\n\ntest\\test_group_add.py:16: AssertionError",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 3,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "host",
    "value" : "REZERV21450"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "thread",
    "value" : "14460-MainThread"
  }, {
    "name" : "suite",
    "value" : "test.test_group_add"
  }, {
    "name" : "testClass",
    "value" : "test.test_group_add"
  }, {
    "name" : "testMethod",
    "value" : "test_group_add[Group(None:name@<;header-\\`[tD4o6 J~;footerR-J$ h]@xu#gxTAiQ)]"
  }, {
    "name" : "package",
    "value" : "test.test_group_add"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "65a78932d223ab2c.json",
  "parameterValues" : [ ]
}